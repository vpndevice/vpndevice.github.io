<!DOCTYPE html>
<html lang="en">

<head>
        <link rel="canonical" href="https://vpndevice.github.io/news/article-105645.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Spring按业务模块输出日志到不同的文件_在线工具</title>
        <meta name="description" content="在我们开发的过程中，可能存在如下情况： 1、有些时候我们需要调用第三方的接口，一般情况下，调用接口，我们都会记录请求的入参和响应的。如果我们自己系统的日志和第三方的日志混合到一个日志文件中，那么可能查" />
        <link rel="icon" href="/assets/website/img/v2rayunode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN设备 机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpndevice.github.io/news/article-105645.htm" />
    <meta property="og:site_name" content="VPN设备 机场订阅节点官网" />
    <meta property="og:title" content="Spring按业务模块输出日志到不同的文件_在线工具" />
    <meta property="og:image" content="https://vpndevice.github.io/uploads/20241222-1/5f167ecea9a0c5eda7bc8fa7798e5773.webp" />
        <meta property="og:release_date" content="2025-04-27T08:29:54" />
    <meta property="og:updated_time" content="2025-04-27T08:29:54" />
        <meta property="og:description" content="在我们开发的过程中，可能存在如下情况： 1、有些时候我们需要调用第三方的接口，一般情况下，调用接口，我们都会记录请求的入参和响应的。如果我们自己系统的日志和第三方的日志混合到一个日志文件中，那么可能查" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring按业务模块输出日志到不同的文件_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Bootstrap -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/v2rayunode/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="fonts/font-awesome/css/font-awesome.css">
    <!-- Stylesheet
    ================================================== -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/v2rayunode/style.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/v2rayunode/nivo-lightbox/nivo-lightbox.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/v2rayunode/nivo-lightbox/default.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-ZMF5N22VMQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-ZMF5N22VMQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="page-top" data-page="detail">
        <!-- Navigation
        ==========================================-->
    <nav id="menu" class="navbar navbar-default navbar-fixed-top">
        <div class="container">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button>

                <a class="navbar-brand" href="/">
                                        <span>VPN设备</span>
                                    </a>
            </div>
            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav navbar-right">
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                        <li><a href="/client.htm">客户端</a></li>
                                    </ul>
            </div>
            <!-- /.navbar-collapse -->
        </div>
    </nav>
    <!-- Header -->
    <header id="header">
        <div class="intro category">
            <div class="overlay">
                <div class="container">
                    <div class="row">
                        <div class="col-md-12 intro-text">
                            <h1>Spring按业务模块输出日志到不同的文件_在线工具</h1>
                            <p>
                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- About Section -->
    <div id="about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				</h1> <p>在我们开发的过程中，可能存在如下情况：<br /> 1、<code>有些时候我们需要调用第三方的接口</code>，一般情况下，调用接口，我们都会记录请求的入参和响应的。如果我们自己系统的日志和第三方的日志混合到一个日志文件中，那么可能查找日志就比较麻烦了。<code>那么我们是否可以将第三方系统的日志单独放到另外的文件中呢？</code></p> <p>2、或者有些时候我们系统需要进行数据迁移，如果某条数据迁移失败了，<code>是否单独放到一个日志文件中比较清晰呢？</code></p> </h1> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/1c0fc481fcfae2c81f9fc4485664be25.jpg" alt="Spring按业务模块输出日志到不同的文件_在线工具"><br /> 从上图中可以看到我们的需求比较简单</p> <p>1、系统启动日志和 <code>login</code> 模块日志记录到 <code>springboot-spring.log</code> 文件中。<br /> 2、第三方业务(<code>QQ</code>)模块的日志记录到 <code>springboot-qq.log</code>文件中。<br /> 3、第三方业务(<code>QQ</code>)模块提供了一个<code>login(loginName)</code>方法，<code>方法的入参loginName</code>需要记录到<code>springboot-qqLoginName.log</code>文件中，模拟<code>一、背景</code>中提到的数据迁移失败，记录失败的数据到单独的日志文件中。</p> </h1> <h2 id="1采用的日志框架">1、采用的日志框架</h2> <p>此处使用<code>logback</code>来完成日志的记录，因为<code>SpringBoot</code>应用程序默认的就是采用的logback来记录日志。</p> <h2 id="2如果实现分模块分文件记录日志">2、如果实现分模块、分文件记录日志</h2> <h3 id="1-编写appender这个可以简单的理解日志需要输出到哪里">1、 编写<code>appender</code>，这个可以简单的理解日志需要输出到哪里。</h3> <p>比如：</p> <pre><code class="language-xml">&lt;!-- 此处定义的日志输出到控制台 --&gt; &lt;appender name="stdout" class="ch.qos.logback.core.ConsoleAppender"&gt;     &lt;encoder&gt;         &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [${PID:- }] [%thread] %-5level %logger{50}#%method:%L -%msg%n&lt;/pattern&gt;      &lt;/encoder&gt; &lt;/appender&gt;  &lt;!-- 此处定义日志输出到 springboot-qq-日期.第几个.log 文件中 --&gt; &lt;appender name="qqAppender" class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;     &lt;rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"&gt;         &lt;fileNamePattern&gt;logs/springboot-qq-%d{yyyy-MM-dd}-.%i.log&lt;/fileNamePattern&gt;     &lt;/rollingPolicy&gt;     &lt;/appender&gt; </code></pre> <h3 id="2如何实现模块输出日志">2、如何实现模块输出日志</h3> <p>此处就需要我们来配置 <code>logger</code>了。logger的<code>name</code>属性指定到具体的全包名，然后引用我们上面定义的<code>appender</code>即可。</p> <pre><code class="language-xml">&lt;!-- 在QQ这个包下的日志单独使用 qqAppender 来输出 --&gt; &lt;logger name="com.huan.springboot.qq" level="info" additivity="false"&gt;     &lt;appender-ref ref="qqAppender"/&gt;     &lt;appender-ref ref="stdout"/&gt; &lt;/logger&gt; </code></pre> <p>配置logger，logger的name为需要单独生成文件的那个包的全包名，然后在里面引用上面定义的appender</p> <h3 id="3如果实现将loginname输出到指定的文件">3、如果实现将loginName输出到指定的文件</h3> <p>其实还是使用 <code>logger</code> 来实现，logger的<code>name</code>需要和 <code>LoggerFactory.getLogger("此处写具体logger的name的值")</code><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/424b74b3629fec6486ac6a01971ab162.jpg" alt="Spring按业务模块输出日志到不同的文件_在线工具"><br /><strong>注意：</strong><br /> 此处可能有一个坑，就是可能会丢失类名，那么我们如何进行解决呢？可以通过<code>MDC</code>来解决。</p> <pre><code class="language-xml">.... %X{CLASSNAME}#%method:%L -%msg%n </code></pre> <pre><code class="language-java">MDC.put("CLASSNAME", QQService.class.getName()); qqLoginName.info("登录用户:[{}]", loginName); </code></pre> <p>即<code>xml</code>中使用<code>%X{CLASSNAME}</code>，在<code>java</code>代码中使用<code>MDC</code>存入<code>CLASSNAME</code>的值。</p> </h1> <h2 id="1编写xml日志文件">1、编写xml日志文件</h2> <h3 id="1编写appender">1、编写appender</h3> <h4 id="1输出日志到控制台">1、输出日志到控制台</h4> <pre><code class="language-xml">&lt;appender name="stdout" class="ch.qos.logback.core.ConsoleAppender"&gt;     &lt;encoder&gt;         &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [${PID:- }] [%thread] %-5level %logger{50}#%method:%L -%msg%n&lt;/pattern&gt;         &lt;charset&gt;UTF-8&lt;/charset&gt;     &lt;/encoder&gt; &lt;/appender&gt; </code></pre> <h4 id="2编写login模板的日志">2、编写<code>login</code>模板的日志</h4> <pre><code class="language-xml">&lt;appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;         &lt;rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"&gt;             &lt;fileNamePattern&gt;logs/springboot-spring-%d{yyyy-MM-dd}-.%i.log&lt;/fileNamePattern&gt;             &lt;maxHistory&gt;7&lt;/maxHistory&gt;             &lt;maxFileSize&gt;1MB&lt;/maxFileSize&gt;             &lt;totalSizeCap&gt;2GB&lt;/totalSizeCap&gt;         &lt;/rollingPolicy&gt;         &lt;encoder&gt;             &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [${PID:- }] [%thread] %-5level %logger{50}#%method:%L -%msg%n&lt;/pattern&gt;             &lt;charset&gt;UTF-8&lt;/charset&gt;         &lt;/encoder&gt;     &lt;/appender&gt; </code></pre> <h4 id="3编写qq模板的日志">3、编写<code>qq</code>模板的日志</h4> <pre><code class="language-xml">&lt;appender name="qqAppender" class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;         &lt;rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"&gt;             &lt;fileNamePattern&gt;logs/springboot-qq-%d{yyyy-MM-dd}-.%i.log&lt;/fileNamePattern&gt;             &lt;maxHistory&gt;7&lt;/maxHistory&gt;             &lt;maxFileSize&gt;1MB&lt;/maxFileSize&gt;             &lt;totalSizeCap&gt;2GB&lt;/totalSizeCap&gt;         &lt;/rollingPolicy&gt;         &lt;encoder&gt;             &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [${PID:- }] [%thread] %-5level %logger{50}#%method:%L -%msg%n&lt;/pattern&gt;             &lt;charset&gt;UTF-8&lt;/charset&gt;         &lt;/encoder&gt;     &lt;/appender&gt; </code></pre> <h4 id="4编写qq模块loginname单独输出到文件的日志">4、编写qq模块loginName单独输出到文件的日志</h4> <pre><code class="language-xml">&lt;appender name="qqLoginNameAppender" class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;         &lt;rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"&gt;             &lt;fileNamePattern&gt;logs/springboot-qqLoginName-%d{yyyy-MM-dd}-.%i.log&lt;/fileNamePattern&gt;             &lt;maxHistory&gt;7&lt;/maxHistory&gt;             &lt;maxFileSize&gt;1MB&lt;/maxFileSize&gt;             &lt;totalSizeCap&gt;2GB&lt;/totalSizeCap&gt;         &lt;/rollingPolicy&gt;         &lt;encoder&gt;             &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [${PID:- }] [%thread] %-5level %X{CLASSNAME}#%method:%L -%msg%n&lt;/pattern&gt;             &lt;charset&gt;UTF-8&lt;/charset&gt;         &lt;/encoder&gt;     &lt;/appender&gt; </code></pre> <h3 id="2配置日志输出到具体位置">2、配置日志输出到具体位置</h3> <h4 id="1配置login模块">1、配置login模块</h4> <pre><code class="language-xml">&lt;root level="INFO"&gt;     &lt;appender-ref ref="stdout"/&gt;     &lt;appender-ref ref="file"/&gt; &lt;/root&gt; </code></pre> <p><code>login</code>模块属于我们自己的系统模块，此处使用 <code>root</code>标签来配置。</p> <h4 id="2配置qq模块">2、配置qq模块</h4> <pre><code class="language-xml">&lt;!-- 在QQ这个包下的日志单独使用 qqAppender 来输出 --&gt; &lt;logger name="com.huan.springboot.qq" level="info" additivity="false"&gt;     &lt;appender-ref ref="qqAppender"/&gt;     &lt;appender-ref ref="stdout"/&gt; &lt;/logger&gt; </code></pre> <p>此处<code>name</code>的值直接指定到了<code>qq</code>的全包名路径。</p> <h4 id="3配置loginname单独输出到文件">3、配置loginName单独输出到文件</h4> <pre><code class="language-xml">&lt;!-- 将所有的QQ登录名防止在另外的文件中 --&gt; &lt;logger name="qqLoginName" level="info" additivity="false"&gt;     &lt;appender-ref ref="qqLoginNameAppender"/&gt;     &lt;appender-ref ref="stdout"/&gt; &lt;/logger&gt; </code></pre> <h2 id="2编写qq模块的代码">2、编写QQ模块的代码</h2> <pre><code class="language-java">@Component public class QQService {      private static final Logger log = LoggerFactory.getLogger(QQService.class);      // getLogger("qqLoginName") 里的 qqLoginName 需要和 logback-spring.xml 中 logger的name一致，才会应用     private static final Logger qqLoginName = LoggerFactory.getLogger("qqLoginName");      public void login(String loginName) {         log.info("QQ业务: 用户:[{}]开始使用QQ来登录系统", loginName);          MDC.put("CLASSNAME", QQService.class.getName());         qqLoginName.info("登录用户:[{}]", loginName);     } } </code></pre> <h2 id="3编写login模块的代码">3、编写login模块的代码</h2> <pre><code class="language-java">@RestController public class LoginController {      private static final Logger log = LoggerFactory.getLogger(LoginController.class);      @Resource     private QQService qqService;      @GetMapping("login/{loginName}")     public String login(@PathVariable("loginName") String loginName) {         log.info("自己业务：用户:[{}]进行登录", loginName);         qqService.login(loginName);         return "ok";     } } </code></pre> </h1> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/d385f7ff93445e2ea107f444d624a537.jpg" alt="Spring按业务模块输出日志到不同的文件_在线工具"><br /> 可以看到得到了我们期望的结果。</p> </h1> <p>https://gitee.com/huan1993/spring-cloud-parent/tree/master/springboot/springboot-logger-split-file</p> </h1> <p>在SpringBoot中，如果我们要覆盖默认的logback配置，推荐使用<code>logback-spring.xml</code>来配置。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/0b39cdd8382ecf1b88ef3d3802e9d03e.jpg" alt="Spring按业务模块输出日志到不同的文件_在线工具"></p> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-104982.htm">收猫长期回收各种宠物猫德阳（有回收宠物猫的地方吗）</a></p>
                                        <p>下一个：<a href="/news/article-105646.htm">动物防疫站给猫打疫苗贵吗（动物防疫中心可以给猫打疫苗吗）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-92893.htm" title="猫粮狗粮生产加工（猫粮狗粮生产加工工艺）">猫粮狗粮生产加工（猫粮狗粮生产加工工艺）</a></li>
                        <li class="py-2"><a href="/news/article-99603.htm" title="spark-sql使用hive的自定函数配置">spark-sql使用hive的自定函数配置</a></li>
                        <li class="py-2"><a href="/news/article-96656.htm" title="Android开发基础——Fragment">Android开发基础——Fragment</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-27-node-share.htm" title="VPN设备 | 4月27日19.9M/S|免费VPN/V2ray/SSR/Clash/Shadowrocket免费节点订阅分享">VPN设备 | 4月27日19.9M/S|免费VPN/V2ray/SSR/Clash/Shadowrocket免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-77204.htm" title="常州宠颐生动物医院地址电话（常州宠物医院24小时营业）">常州宠颐生动物医院地址电话（常州宠物医院24小时营业）</a></li>
                        <li class="py-2"><a href="/news/article-92174.htm" title="成都宠物领养平台公众号（成都市宠物狗领养平台）">成都宠物领养平台公众号（成都市宠物狗领养平台）</a></li>
                        <li class="py-2"><a href="/news/article-71831.htm" title="做梦梦见办喜事是什么意思（做梦梦见办喜事是什么意思呀）">做梦梦见办喜事是什么意思（做梦梦见办喜事是什么意思呀）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-25-clash-v2ray-ss-ssr.htm" title="VPN设备 | 4月25日22M/S|免费VPN/SSR/V2ray/Shadowrocket/Clash免费节点订阅分享">VPN设备 | 4月25日22M/S|免费VPN/SSR/V2ray/Shadowrocket/Clash免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-20-node-share-links.htm" title="VPN设备 | 3月20日18.3M/S|免费VPN/Shadowrocket/Clash/V2ray/SSR免费节点订阅分享">VPN设备 | 3月20日18.3M/S|免费VPN/Shadowrocket/Clash/V2ray/SSR免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-2-free-high-speed-nodes.htm" title="VPN设备 | 4月2日21.6M/S|免费VPN/SSR/V2ray/Clash/Shadowrocket免费节点订阅分享">VPN设备 | 4月2日21.6M/S|免费VPN/SSR/V2ray/Clash/Shadowrocket免费节点订阅分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">81</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
        <!-- Footer Section -->
    <div id="footer">
        <div class="container text-center">
                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
            <p>
                <a href="/">VPN设备 机场订阅节点官网</a> 版权所有 Powered by WordPress
            </p>
        </div>
    </div>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/jquery.1.11.1.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/bootstrap.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/SmoothScroll.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/nivo-lightbox.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/jqBootstrapValidation.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/contact_me.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/v2rayunode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>